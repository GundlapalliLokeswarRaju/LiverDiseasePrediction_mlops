name: MLOps Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test_train:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run unit tests
        run: |
          pytest tests
          
      - name: Train model and log with MLflow
        run: |
          python train.py

  build_deploy:
    needs: test_train
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t lokesh8374/liver:latest ./app
          docker push lokesh8374/liver:latest

      # Install Minikube prerequisites and start Minikube with the Docker driver.
      - name: Install Minikube
        run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube_latest_amd64.deb
          sudo dpkg -i minikube_latest_amd64.deb

      - name: Start Minikube Cluster
        run: |
          minikube start --driver=docker --profile liver-mlops
          minikube status --profile liver-mlops
          kubectl config use-context minikube

      - name: Deploy update to Kubernetes
        run: |
          kubectl set image deployment/liver-api liver-api=lokesh8374/liver:latest --namespace=default

      # Port-forwarding the services
      - name: Port-forward liver-api-service
        run: |
          kubectl port-forward svc/liver-api-service 8000:80 &
        
      - name: Port-forward Grafana
        run: |
          kubectl port-forward svc/grafana 3000:80 &

      - name: Port-forward Prometheus
        run: |
          kubectl port-forward svc/prometheus-server 9090:80 &
